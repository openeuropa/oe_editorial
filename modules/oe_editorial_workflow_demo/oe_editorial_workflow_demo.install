<?php

/**
 * @file
 * OpenEuropa Editorial Workflow Demo module.
 */

declare(strict_types = 1);

/**
 * Implements hook_install().
 */
function oe_editorial_workflow_demo_install($is_syncing): void {
  // If we are installing from config, we bail out.
  if ($is_syncing) {
    return;
  }

  \Drupal::service('oe_editorial_corporate_workflow.workflow_installer')->installWorkflow('oe_workflow_demo');

  // Add entity version field to corporate workflow bundles.
  /** @var \Drupal\workflows\WorkflowInterface $corporate_workflow */
  $corporate_workflow = \Drupal::entityTypeManager()->getStorage('workflow')->load('oe_corporate_workflow');
  $bundles = $corporate_workflow->get('type_settings')['entity_types']['node'] ?? [];
  if (!$bundles) {
    return;
  }

  $default_values = [
    'major' => 0,
    'minor' => 1,
    'patch' => 0,
  ];

  \Drupal::service('entity_version.entity_version_installer')->install('node', $bundles, $default_values);

  // We apply the entity version setting for the version field.
  \Drupal::entityTypeManager()->getStorage('entity_version_settings')->create([
    'target_entity_type_id' => 'node',
    'target_bundle' => 'oe_workflow_demo',
    'target_field' => 'version',
  ])->save();
}

/**
 * Implements hook_uninstall().
 */
function oe_editorial_workflow_demo_uninstall(): void {
  \Drupal::service('oe_editorial_corporate_workflow.workflow_installer')->uninstallWorkflow('oe_workflow_demo');
}
